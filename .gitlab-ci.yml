image: $CONTAINER_TEST_IMAGE

variables:
  CONTAINER_TEST_IMAGE: gitlab-registry.mpcdf.mpg.de/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME
  OMP_NUM_THREADS: 1

stages:
  - static_checks
  - build_docker
  - test
  - release
  - demo_runs

check_no_asserts:
  image: debian:stable-slim
  stage: static_checks
  before_script:
    - ls
  script:
    - if [ `grep -r "^[[:space:]]*assert[ (]" src demos | wc -l` -ne 0 ]; then echo "Have found assert statements. Don't use them! Use \`utilities.myassert\` instead." && exit 1; fi

build_docker_from_scratch:
  only:
    - schedules
  image: docker
  stage: build_docker
  before_script:
    - ls
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker build -t $CONTAINER_TEST_IMAGE --no-cache .
    - docker push $CONTAINER_TEST_IMAGE

build_docker_from_cache:
  except:
    - schedules
  image: docker
  stage: build_docker
  before_script:
    - ls
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

test_serial:
  stage: test
  script:
    - pytest-3 -q --cov=nifty8 test
    - >
      python3 -m coverage report --omit "*plot*" | tee coverage.txt
    - >
      grep TOTAL coverage.txt | awk '{ print "TOTAL: "$4; }'

test_mpi:
  stage: test
  variables:
    OMPI_MCA_btl_vader_single_copy_mechanism: none
  script:
    - mpiexec -n 2 --bind-to none pytest-3 -q test/test_mpi

pages:
  stage: release
  script:
    - rm -rf docs/build docs/source/mod
    - sh docs/generate.sh
    - mv docs/build/ public/
  artifacts:
    paths:
    - public
  only:
  - NIFTy_7


before_script:
  - python3 setup.py install --user -f

run_ipynb0:
  stage: demo_runs
  script:
    - jupytext --to ipynb demos/getting_started_0.py
    - jupyter nbconvert --execute --ExecutePreprocessor.timeout=None --to html demos/getting_started_0.ipynb

run_ipynb1:
  stage: demo_runs
  script:
    - jupytext --to ipynb demos/getting_started_4_CorrelatedFields.py
    - jupyter nbconvert --execute --ExecutePreprocessor.timeout=None --to html demos/getting_started_4_CorrelatedFields.ipynb

run_getting_started_1:
  stage: demo_runs
  script:
    - python3 demos/getting_started_1.py
  artifacts:
    paths:
      - '*.png'

run_getting_started_2:
  stage: demo_runs
  script:
    - python3 demos/getting_started_2.py
  artifacts:
    paths:
      - 'getting_started_2_results'
      - '*.png'

run_getting_started_3:
  stage: demo_runs
  script:
    - python3 demos/getting_started_3.py
  artifacts:
    paths:
      - 'getting_started_3_results'
      - '*.png'

run_getting_started_3_mpi:
  stage: demo_runs
  script:
    - mpirun -np 2 --bind-to none python3 demos/getting_started_3.py
  artifacts:
    paths:
      - 'getting_started_3_results'
      - '*.png'

run_getting_started_mf:
  stage: demo_runs
  script:
    - mpiexec -n 2 --bind-to none python3 demos/getting_started_5_mf.py
  artifacts:
    paths:
      - 'getting_started_mf_results'
      - '*.png'

run_getting_started_nifty2jax:
  stage: demo_runs
  script:
    - python3 demos/getting_started_nifty2jax.py
  artifacts:
    paths:
      - '*.png'

run_getting_density:
  stage: demo_runs
  script:
    - python3 demos/more/density_estimation.py
  artifacts:
    paths:
      - '*.png'

run_bernoulli:
  stage: demo_runs
  script:
    - python3 demos/more/bernoulli_map.py
  artifacts:
    paths:
      - '*.png'

run_curve_fitting:
  stage: demo_runs
  script:
    - python3 demos/more/polynomial_fit.py
  artifacts:
    paths:
      - '*.png'

run_visual_vi:
  stage: demo_runs
  script:
    - python3 demos/more/variational_inference_visualized.py

run_meanfield:
  stage: demo_runs
  script:
    - python3 demos/more/parametric_variational_inference.py

run_demo_categorical_L1:
  stage: demo_runs
  script:
    - python3 demos/more/re_categorical_L1.py
  artifacts:
    paths:
      - '*.png'

run_demo_cf_w_known_spectrum:
  stage: demo_runs
  script:
    - python3 demos/more/re_correlated_field_w_known_spectrum.py
  artifacts:
    paths:
      - '*.png'

run_demo_cf_w_unknown_spectrum:
  stage: demo_runs
  script:
    - python3 demos/more/re_correlated_field_w_unknown_spectrum.py
  artifacts:
    paths:
      - '*.png'

run_demo_cf_w_unknown_factorizing_spectra:
  stage: demo_runs
  script:
    - python3 demos/more/re_correlated_field_w_unknown_factorizing_spectra.py
  artifacts:
    paths:
      - '*.png'

run_demo_nifty_to_jifty:
  stage: demo_runs
  script:
    - python3 demos/more/re_nifty_to_jifty.py
  artifacts:
    paths:
      - '*.png'

run_demo_banana:
  stage: demo_runs
  script:
    - python3 demos/more/re_banana.py
  artifacts:
    paths:
      - '*.png'

run_demo_banana_w_reg:
  stage: demo_runs
  script:
    - python3 demos/more/re_banana_w_reg.py
  artifacts:
    paths:
      - '*.png'
